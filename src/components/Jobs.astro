---
import { getCollection } from "astro:content";
import Heading from "./Heading.astro";

const jobs = (await getCollection("jobs")).sort(
  (a, b) => b.data.date.valueOf() - a.data.date.valueOf()
);
---

<section class="jobs_container section" id="jobs">
  <Heading counter={2}>Where I've Worked</Heading>
  <div class="tabs_container">
    <div class="tabs" role="tablist">
      {
        jobs.map(({ data: { company } }: any, i: number) => {
          return (
            <button
              class="tab link"
              aria-label={company}
              role="tab"
              aria-selected={i === 0 ? "true" : "false"}
              aria-controls={`panel${i}`}
            >
              {company}
            </button>
          );
        })
      }
      <span class="highlighter"></span>
    </div>
    <div class="content_container">
      {
        jobs.map(async (job: any, i: number) => {
          const {
            data: { title, company, url, range },
            render,
          } = job;
          const { Content } = await render();

          return (
            <div
              class="tab_content inline-link"
              role="tabpanel"
              id={`panel${i}`}
              aria-labelledby={`job${i}`}
              aria-hidden={i === 0 ? false : true}
            >
              <h4 class="job_title">
                <span>{title}</span>
                <span class="company">
                  &nbsp;@&nbsp;
                  <a
                    href={url}
                    target="_blank"
                    rel="nofollow noopener noreferrer"
                  >
                    {company}
                  </a>
                </span>
              </h4>
              <h5 class="job_details">
                <span>{range}</span>
              </h5>
              <Content />
            </div>
          );
        })
      }
    </div>
  </div>
</section>

<script>
  import ScrollReveal from "scrollreveal";
  import { config } from "@/constants/config.ts";

  ScrollReveal().reveal(".jobs_container", config.srConfig());

  function addTabListeners() {
    const tabs = document.querySelectorAll(".tab");
    const highlighter = document.querySelector(".highlighter") as HTMLElement;
    const tabContents = document.querySelectorAll(".tab_content");

    if (!tabs || !highlighter || !tabContents) {
      console.error("Elements not found in the DOM");
      return;
    }

    tabs.forEach((tab, i) => {
      const tabContent = tabContents[i];
      const isFirstTab = i === 0;

      if (isFirstTab) {
        tab.classList.add("active");
        tabContent.classList.add("active");
      }

      tab.addEventListener("click", () => {
        tabs.forEach((t) => t.classList.remove("active"));
        tab.classList.add("active");

        tabContents.forEach((content) => content.classList.remove("active"));
        tabContent.classList.add("active");

        const isHidden = tabContent.getAttribute("aria-hidden") === "true";
        tabContent.setAttribute("aria-hidden", isHidden ? "false" : "true");

        highlighter.style.transform = `translateY(${i * config.tabHeight}px)`;
      });
    });
  }

  function addListeners() {
    window.addEventListener("DOMContentLoaded", () => {
      addTabListeners();
    });
    document.addEventListener("astro:after-swap", () => {
      addTabListeners();
    });
  }

  addListeners();
</script>

<style>
  .jobs_container {
    position: relative;
    max-width: 700px;
  }
  .tabs_container {
    display: flex;
    align-items: flex-start;
    position: relative;
  }
  .tabs {
    display: block;
    position: relative;
    width: max-content;
    z-index: 3;
  }
  .tab {
    display: flex;
    align-items: center;
    width: 100%;
    background-color: transparent;
    height: var(--tab-height);
    padding: 0 20px 2px;
    transition: var(--transition);
    border-left: 2px solid var(--color-dark-grey);
    text-align: left;
    white-space: nowrap;
    font-family: var(--font-sf-mono);
    font-size: var(--text-smallish);
    color: var(--color-light-grey);
    &:hover,
    &:focus {
      background-color: var(--color-light-navy);
    }
  }
  .tab.active {
    color: var(--color-green);
  }

  .highlighter {
    display: block;
    background: var(--color-green);
    width: 2px;
    height: var(--tab-height);
    border-radius: var(--border-radius);
    position: absolute;
    top: 0;
    left: 0;
    transition: var(--theme-transition);
    transition-delay: 0.1s;
    z-index: 10;
  }

  .content_container {
    position: relative;
    padding-top: 14px;
    padding-left: 30px;
    flex-grow: 1;
  }
  .tab_content {
    top: 0;
    left: 0;
    width: 100%;
    height: auto;
    opacity: 0;
    z-index: -1;
    position: absolute;
    visibility: hidden;
    transition: var(--theme-transition);
    transition-duration: 0s;
  }
  .tab_content.active {
    opacity: 1;
    z-index: 2;
    position: relative;
    visibility: visible;
    transition-duration: 0.5s;
  }
  .tab_content {
    ul {
      padding: 0;
      margin: 0;
      list-style: none;
      font-size: var(--text-large);
      li {
        position: relative;
        padding-left: 30px;
        margin-bottom: 5px;
        &:before {
          content: "â–¹";
          position: absolute;
          left: 0;
          color: var(--color-green);
          line-height: var(--text-x-large);
        }
      }
    }
  }
  .job_title {
    color: var(--color-lightest-slate);
    font-size: var(--text-xx-large);
    font-weight: 500;
    margin-bottom: 5px;
  }
  .company {
    color: var(--color-green);
  }
  .job_details {
    font-family: var(--font-sf-mono);
    font-size: var(--text-smallish);
    font-weight: normal;
    letter-spacing: 0.5px;
    color: var(--color-light-slate);
    margin-bottom: 30px;
    svg {
      width: 15px;
    }
  }

  @media screen and (max-width: 48em) {
    .tab {
      padding: 0 15px 2px;
    }
    .content_container {
      padding-left: 20px;
    }
  }
  @media screen and (max-width: 37.5em) {
    .tabs_container {
      display: block;
    }
    .tabs {
      display: flex;
      margin-bottom: 30px;
      width: 100%;
      overflow-x: scroll;
    }
    .tab {
      display: flex;
      justify-content: center;
      align-items: center;
      padding: 0 15px;
      text-align: center;
      border-left: 0;
      border-bottom: 2px solid var(--color-dark-grey);
      min-width: 120px;
    }
    .highlighter {
      width: 100%;
      max-width: var(--tab-width);
      height: 2px;
      top: auto;
      bottom: 0;
    }
    .content_container {
      padding-left: 0;
    }
  }
</style>
